{
  "openapi": "3.1.0",
  "info": {
    "title": "3rdwave Public API",
    "version": "1.0.1",
    "contact": {
      "email": "bill.zhao@3rdwave.co"
    },
    "license": {
      "name": "Testing",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "description": "Real version of 3rdwave public api",
      "url": "http://localhost:8080/blinco-3ww-webapp/api/public"
    }
  ],
  "tags": [
    {
      "name": "Transport Event Function",
      "description": "this is to describe all general function which will be used to query transport event information"
    }
  ],
  "paths": {
    "/getTransportEventDate": {
      "post": {
        "security": [
          {
            "password": [
              "write"
            ]
          }
        ],
        "description": "query transport events info based on the location codes, transport unit label and transport event type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/transportEventRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The responses have been listed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transportEventResponseDtoList"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/400ApiError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "transportEventRequestDto": {
        "type": "object",
        "properties": {
          "locationCode": {
            "type": "string",
            "example": "USLGB"
          },
          "transportUnitLabel": {
            "type": "string",
            "example": "ABTU12345"
          },
          "transportEventType": {
            "type": "string",
            "example": "ETA"
          }
        }
      },
      "transportEventResponseDto": {
        "type": "object",
        "properties": {
          "transportUnitNumber": {
            "type": "string",
            "example": "ABTU12345"
          },
          "transportUnitReference": {
            "type": "string",
            "example": "CNT000001"
          },
          "eventDate": {
            "type": "string",
            "format": "date",
            "example": "2025-01-01"
          },
          "eventCode": {
            "type": "string",
            "example": "ETA"
          }
        }
      },
      "transportEventResponseDtoList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/transportEventResponseDto"
        }
      }
    },
    "responses": {
      "400ApiError": {
        "description": "Unexpected error message",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "unfound error message"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "parthParam": {
        "in": "path",
        "name": "productId",
        "required": true,
        "schema": {
          "type": "integer",
          "example": 12345
        }
      },
      "headerParam": {
        "in": "header",
        "name": "customer-security-header",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 12123212
        }
      }
    },
    "securitySchemes": {
      "password": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "http://example.com/oauth/token",
            "scopes": {
              "write": "allows modifying resources",
              "read": "allows reading resources"
            }
          }
        }
      }
    }
  }
}